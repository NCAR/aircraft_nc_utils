#! /usr/bin/env python3

import netCDF4
import numpy as np
import os

input_file = 'CSET-HOLODEC-H2H_GV_20150707.150800-175559.nc'
print(input_file)
# Define function to read a HOLODEC NetCDF file, and denormalize the binned concentration data
def denormHOLODEC():

    # read file
    print('Reading input HOLODEC file for merging...')
    holodecfile = netCDF4.Dataset(input_file, mode='r+')

    # step through variables
    for i in holodecfile.variables.keys():

        # conditional for binned concentration data
        if i == 'CHDC_LWII':
            print(i)
            # check to see if data has been normalized (norm data will have a trailing um in units
            try:
                if '/um' in holodecfile.variables[i].getncattr('units'):
    
                    # read CHDC_LWII as numpy array
                    chdc_lwii = np.array(holodecfile.variables[i][:,0,:])
                    # hard coded bin width based on CSET HOLODEC data
                    bin_width = np.array([0., 4., 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 5., 5., 5., 5, 5., 10., 10., 10., 10., 10., 50., 50., 50., 50., 50., 50., 50., 50., 1500.]) 
                    # multiply the data from CHDC_LWII array by the bin width array
                    chdc_lwii = np.multiply(chdc_lwii, bin_width)
                    # write the denormalized array to the NetCDF file
                    CHDC_LWII = holodecfile['CHDC_LWII']
                    CHDC_LWII[:] = chdc_lwii
                elif '/um' not in i.units():
                    pass
            except Exception as e:
                print(e)
        else:
            pass
    holodecfile.close()
    try:
        command = str('ncrename -v THDCA_LWII,TACTHDC_LWII '+input_file)
        os.system(command)
        command = str('ncrename -v THDCC_LWII,CONCHDC_LWII '+input_file)
        os.system(command)
        command = str('ncatted -O -a long_name,CONCHDC_LWII,o,c,"HOLODEC total number concentration" '+input_file)
        os.system(command)
        command = str('ncatted -O -a long_name,CHDC_LWII,o,c,"HOLODEC number concentration per bin" '+input_file)
        os.system(command)
        command = str('ncatted -O -a long_name,QCflag_LWII,o,c,"HOLODEC QC flag" '+input_file)
        os.system(command)
        command = str('ncatted -O -a long_name,TACTHDC_LWII,o,c,"HOLODEC total number of particles" '+input_file)
        os.system(command)
        command = str('ncatted -O -a CellSizeNote,AHDC_LWII,d,, '+input_file)
        os.system(command)
        command = str('ncatted -O -a CellSizeUnits,AHDC_LWII,d,, '+input_file)
        os.system(command)
        command = str('ncatted -O -a Units,CHDC_LWII,o,c,N/cm3 '+input_file)
        os.system(command)
        holodecfile.close()
    except Exception as e:
        print(e)

def main():
    denormHOLODEC()

if __name__ == "__main__":
    main()
